AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  YetiTransactionsTableName:
    Description: The name of the main transactions table
    Type: String
  YetiLoginsTableName:
    Description: The name of the logins information table
    Type: String
  YetiTokensTableName:
    Description: The name of the token information table
    Type: String
  OutlookOAuthClientId:
    Description: The client ID used for Outlook OAuth
    Type: String
    NoEcho: true
  OutlookOAuthClientSecret:
    Description: The client ID used for Outlook OAuth
    Type: String
    NoEcho: true

Resources:
  # Operations on transactions - Lambda functions
  YetiApiLoadTransactions:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-LoadTransactions
      Handler: yeti_transactions_api.load_transactions
      Timeout: 10
      Runtime: python3.6
      Events:
        LoadTransactions:
          Type: Api
          Properties:
            Path: /transactions
            Method: get
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
  YetiApiCloseTransaction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-CloseTransaction
      Handler: yeti_transactions_api.close_transaction
      Timeout: 10
      Runtime: python3.6
      Events:
        CloseTransaction:
          Type: Api
          Properties:
            Path: /transactions/close
            Method: put
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
  YetiApiReopenTransaction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-ReopenTransaction
      Handler: yeti_transactions_api.reopen_transaction
      Timeout: 10
      Runtime: python3.6
      Events:
        ReopenTransaction:
          Type: Api
          Properties:
            Path: /transactions/reopen
            Method: put
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess

  # Outlook OAuth API - Lambda functions
  YetiApiOutlookOAuth:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-OutlookOAuth
      Handler: yeti_auth_api.login_outlook_oauth
      Timeout: 10
      Runtime: python3.6
      Events:
        OutlookOAuthLogin:
          Type: Api
          Properties:
            Path: /user/login/outlook_oauth
            Method: post
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: '*'
      Environment:
        Variables:
          OutlookOAuthClientIdCipherText:
            Fn::GetAtt: [EncryptedOutlookOAuthClientId, CipherText]
          OutlookOAuthClientSecretCipherText:
            Fn::GetAtt: [EncryptedOutlookOAuthClientSecret, CipherText]
  YetiApiRefreshAccessToken:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-RefreshAccessToken
      Handler: yeti_auth_api.refresh_outlook_access_token
      Timeout: 10
      Runtime: python3.6
      Events:
        RefreshAccessToken:
          Type: Api
          Properties:
            Path: /user/token/refresh_outlook_access_token
            Method: post
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: '*'
      Environment:
        Variables:
          OutlookOAuthClientIdCipherText:
            Fn::GetAtt: [EncryptedOutlookOAuthClientId, CipherText]
          OutlookOAuthClientSecretCipherText:
            Fn::GetAtt: [EncryptedOutlookOAuthClientSecret, CipherText]
  YetiApiGmailOAuth:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-GmailOAuth
      Handler: yeti_auth_api.login_gmail_oauth
      Timeout: 10
      Runtime: python3.6
      Events:
        OutlookOAuthLogin:
          Type: Api
          Properties:
            Path: /user/login/gmail_oauth
            Method: post
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess

  # Sensitive Information Encryption
  EncryptedOutlookOAuthClientId:  #Get the cipher text with Fn::GetAtt: - <CustomResourceName> - CipherText
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken:
        Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudFormationKMSResource
      KeyId: arn:aws:kms:us-west-2:917309224575:key/f5166e7b-7f9d-4353-9099-9fff22e01f5d
      PlainText:
        Ref: OutlookOAuthClientId
  EncryptedOutlookOAuthClientSecret:  #Get the cipher text with Fn::GetAtt: - <CustomResourceName> - CipherText
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken:
        Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloudFormationKMSResource
      KeyId: arn:aws:kms:us-west-2:917309224575:key/f5166e7b-7f9d-4353-9099-9fff22e01f5d
      PlainText:
        Ref: OutlookOAuthClientSecret

  # DynamoDB Tables
  YetiTransactionsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName:
        Ref: YetiTransactionsTableName
      AttributeDefinitions:
        - AttributeName: "TransactionId"
          AttributeType: "S"
        - AttributeName: "TransactionPlatform"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "TransactionId"
          KeyType: "HASH"
        - AttributeName: "TransactionPlatform"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  YetiLoginsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName:
        Ref: YetiLoginsTableName
      AttributeDefinitions:
        - AttributeName: "Email"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Email"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  YetiTokensTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName:
        Ref: YetiTokensTableName
      AttributeDefinitions:
        - AttributeName: "Email"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Email"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"

  # API Gateway
  ProjectYetiApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ProjecYetiApi
      StageName: prod
      DefinitionUri: swagger.yml
