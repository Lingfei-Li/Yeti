AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  YetiTransactionsTableName:
    Description: The name of the main transactions table
    Type: String
  YetiLoginsTableName:
    Description: The name of the logins information table
    Type: String
  YetiTokensTableName:
    Description: The name of the token information table
    Type: String

Resources:
  YetiApiLoadTransactions:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-LoadTransactions
      Handler: yeti_api.load_transactions
      Timeout: 10
      Runtime: python3.6
      Events:
        LoadTransactions:
          Type: Api
          Properties:
            Path: /transactions
            Method: get
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
  YetiApiOutlookOAuth:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-OutlookOAuth
      Handler: yeti_api.login_outlook_oauth
      Timeout: 10
      Runtime: python3.6
      Events:
        OutlookOAuthLogin:
          Type: Api
          Properties:
            Path: /user/login/outlook_oauth
            Method: post
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
  YetiApiCloseTransaction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-CloseTransaction
      Handler: yeti_api.close_transaction
      Timeout: 10
      Runtime: python3.6
      Events:
        CloseTransaction:
          Type: Api
          Properties:
            Path: /transactions/close/{transactionId}
            Method: put
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
  YetiApiReopenTransaction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-ReopenTransaction
      Handler: yeti_api.reopen_transaction
      Timeout: 10
      Runtime: python3.6
      Events:
        ReopenTransaction:
          Type: Api
          Properties:
            Path: /transactions/reopen/{transactionId}
            Method: put
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess
  YetiApiRefreshAccessToken:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: YetiApi-RefreshAccessToken
      Handler: yeti_api.refresh_access_token
      Timeout: 10
      Runtime: python3.6
      Events:
        RefreshAccessToken:
          Type: Api
          Properties:
            Path: /user/token/refresh_access_token
            Method: post
            RestApiId:
              Ref: ProjectYetiApi
      Policies:
        - AmazonDynamoDBFullAccess

  YetiTransactionsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName:
        Ref: YetiTransactionsTableName
      AttributeDefinitions:
        - AttributeName: "TransactionId"
          AttributeType: "S"
        - AttributeName: "SenderFirstName"
          AttributeType: "S"
        - AttributeName: "SenderLastName"
          AttributeType: "S"
        - AttributeName: "SenderEmail"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "TransactionId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: "TransactionsBySenderNameIndex"
          KeySchema:
            - AttributeName: "SenderFirstName"
              KeyType: "HASH"
            - AttributeName: "SenderLastName"
              KeyType: "RANGE"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: "3"
            WriteCapacityUnits: "3"
        - IndexName: "TransactionsBySenderEmailIndex"
          KeySchema:
            - AttributeName: "SenderEmail"
              KeyType: "HASH"
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: "3"
            WriteCapacityUnits: "3"
  YetiLoginsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName:
        Ref: YetiLoginsTableName
      AttributeDefinitions:
        - AttributeName: "Email"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Email"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
  YetiTokensTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName:
        Ref: YetiTokensTableName
      AttributeDefinitions:
        - AttributeName: "Email"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Email"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"

  # API Gateway
  ProjectYetiApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ProjecYetiApi
      StageName: prod
      DefinitionUri: swagger.yml
